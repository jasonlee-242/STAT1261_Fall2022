for (mtry in seq(2,20,2)){
tunegrid = expand.grid(.mtry = 1:10)
fit <- train(y=as.factor(train2$HardDrugs),
x=as.matrix(subset(train2, select=-HardDrugs)),
method = "rf",
tunegrid = tunegrid,
trControl=trControl,
metric = "Accuracy")
key <- toString(mtry)
accuracy[[key]] <- fit
}
set.seed(100)
trControl <- trainControl(method="repeatedcv", number=5, repeats=2)
accuracy <- list()
for (mtry in seq(2,20,2)){
fit <- train(y=as.factor(train2$HardDrugs),
x=as.matrix(subset(train2, select=-HardDrugs)),
method = "rf",
trControl=trControl,
metric = "Accuracy")
key <- toString(mtry)
accuracy[[key]] <- fit
}
trControl <- trainControl(method="repeatedcv", number=5, repeats=2)
accuracy <- list()
for (mtry in seq(2,20,2)){
fit <- train(HardDrugs~.,
data = train2,
method = "rf",
trControl=trControl,
metric = "Accuracy")
key <- toString(mtry)
accuracy[[key]] <- fit
}
trControl <- trainControl(method="repeatedcv", number=5, repeats=2)
mtry <- seq(2,20,2)
tunegrid <- expand.grid(.mtry = mtry)
fit <- train(HardDrugs~.,
data = train2,
method = "rf",
tuneGrid = tunegrid,
trControl=trControl,
metric = "Accuracy")
fit
mod_rf2 <- randomForest(form_full,train2,ntree=1000,mtry = 8)
rf2_ConfMat <- confusion_matrix(test2, test2$HardDrugs,mod_rf2)
rf2_misClassRate <- misclass(rf2_ConfMat)
paste("Misclassification Rate for RF Model with mtry 8: ")
mod_rf2 <- randomForest(form_full,train2,ntree=1000,mtry = 8)
rf2_ConfMat <- confusion_matrix(test2, test2$HardDrugs,mod_rf2)
rf2_misClassRate <- misclass(rf2_ConfMat)
paste("Misclassification Rate for RF Model with mtry 8: ", round(rf2_misClassRate,4))
mod_rf3 <- randomForest(form_full,train2,ntree=1000,mtry = 6)
rf3_ConfMat <- confusion_matrix(test2, test2$HardDrugs,mod_rf3)
rf3_misClassRate <- misclass(rf3_ConfMat)
paste("Misclassification Rate for RF Model with mtry 6: ", round(rf3_misClassRate,4))
library(factoextra)
library(cluster)
install.packages("factoextra")
getwd()
~
d
pwd
knitr::opts_chunk$set(echo = TRUE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv(file = "~/Desktop/Fall2022 Class Materials/STAT1261/HW/Country-data.csv", show_col_types = FALSE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("~/Desktop/Fall2022 Class Materials/STAT1261/HW/Country-data.csv", show_col_types = FALSE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("~/Desktop/Fall2022 Class Materials/STAT1261/HW/Country-data.csv", show_col_types = FALSE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("~/Desktop/Fall2022 Class Materials/STAT1261/HW/Country-data.csv", show_col_types = FALSE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("Desktop/Fall2022 Class Materials/STAT1261/HW/Country-data.csv", show_col_types = FALSE)
setwd("~/Desktop/Fall2022 Class Materials/STAT1261/HW")
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("Country-data.csv", show_col_types = FALSE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv('Country-data.csv', show_col_types = FALSE)
#install.packages("factoextra")
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("Country-data.csv", show_col_types = FALSE)
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("Country-data.csv")
View(country)
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("Country-data.csv",show_col_types=FALSE)
?read.csv
library(factoextra)
library(tidyverse)
library(cluster)
country = read.csv("Country-data.csv")
country_pc = country %>%
select(-country) %>%
prcomp(scale=TRUE)
View(country_pc)
View(country_pc)
library(ape)
country_dend = country_s %>% dist(method="euclidean") %>%
hclust(method="ward.D2")
library(factoextra)
library(tidyverse)
library(cluster)
country = read_csv("Country-data.csv", show_col_types = FALSE)
country_pc = country %>%
select(-country) %>%
prcomp(scale=TRUE)
View(country_pc)
country_pc$rotation
#Variance is SD squared
country_var <- country_pc$sdev^2
pc_var <- country_var / sum(country_var)
pc_var
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black")
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(color = "blue", cex = 3, alpha = 0.3) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(color = "blue", cex = 6, alpha = 0.3) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(x = 2, y = pc_var[2], color = "blue", cex = 6, alpha = 0.3) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 2, y = pc_var[2]), color = "blue", cex = 6, alpha = 0.3) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(aes(x = 2, y = pc_var[2]), color = "blue", cex = 6, alpha = 0.3) +
geom_point(color = "blue", cex = 2) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(aes(x = 2, y = pc_var[2]), color = "blue", cex = 2, alpha = 0.3) +
geom_point(color = "blue", cex = 2) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(aes(x = 2, y = pc_var[2]), color = "orange", cex = 2, alpha = 0.3) +
geom_point(color = "blue", cex = 2) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 2, y = pc_var[2]), color = "orange", cex = 2, alpha = 0.3) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 2, y = pc_var[2], color = "orange", cex = 2, alpha = 0.3)) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 2, y = pc_var[2]), color = "orange", cex = 2, alpha = 0.1) +
scale_x_continuous(breaks = 1:9)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 2, y = pc_var[2]), color = "orange", cex = 6, alpha = 0.1) +
scale_x_continuous(breaks = 1:9)
View(pc_df)
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
gg_plot(aes(x=principal_comp,y=pc_var_Cum)) +
gg_line(color = "black") +
gg_point(color = "red", cex = 2)
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
gg_line(color = "black") +
gg_point(color = "red", cex = 2)
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
geom_line(color = "black") +
geom_point(color = "red", cex = 2)
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
geom_line(color = "black") +
geom_point(color = "red", cex = 2) +
geom_line(aes(y=0.9), color = "gray")
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
geom_line(color = "black") +
geom_point(color = "red", cex = 2) +
geom_line(aes(yintercept=0.9), lty=2, color = "gray")
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
geom_line(color = "black") +
geom_point(color = "red", cex = 2) +
geom_hline(aes(yintercept=0.9), lty=2, color = "gray")
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
geom_line(color = "black") +
geom_point(color = "red", cex = 2) +
geom_hline(aes(yintercept=0.9), lty=2, color = "purple")+
scale_x_continuous(breaks = 1:9)
country_s = scale(country[,-1])
country_s = scale(country[,-1])
country_pc$x[1:4]
View(country_pc)
country_pc[["x"]]
country_s = scale(country[,-1])
p4_pc <- country_pc$x[1:4]
p4_pc
country_s = scale(country[,-1])
p4_pc <- country_pc$x[,1:4]
head(p4_pc,10)
country_s = scale(country[,-1])
p4_pc <- country_pc$x[,1:4]
fviz_nbclust(p4_pc, kmeans, "gstat")
country_s = scale(country[,-1])
p4_pc <- country_pc$x[,1:4]
fviz_nbclust(p4_pc, kmeans, "gap_stat")
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
sum(km_mod$cluster != pam_mod$clustering)
country_pam = country %>% mutate(cluster=factor(pam_mod$cluster))
View(country_pam)
country_pam = country %>% mutate(cluster=factor(pam_mod$cluster))
country_pam %>%
boxplot(gdpp~cluster)
country_pam = country %>% mutate(cluster=factor(pam_mod$cluster))
country_pam %>%
boxplot(gdpp~cluster,horizontal=T)
country_pam = country %>% mutate(cluster=factor(pam_mod$cluster))
boxplot(gdpp~cluster,data=country_pam,horizontal=T)
library(ape)
country_dend = country_s %>% dist(method="euclidean") %>%
hclust(method="ward.D2")
plot(as.phylo(country_dend), type = "cladogram", cex = 0.5,
label.offset = 0.5)
c1_life <- country_pam[country_pam$cluster == 1, ]$life_expec
c2_life <- country_pam[country_pam$cluster == 2, ]$life_expec
c3_life <- country_pam[country_pam$cluster == 3, ]$life_expec
paste("Cluster 1 Median life expectancy: ", median(c1_life), "\n",
"Cluster 2 Median life expectancy: ", median(c2_life), "\n",
"Cluster 3 Median life expectancy: ", median(c3_life))
c1_life <- country_pam[country_pam$cluster == 1, ]$life_expec
c2_life <- country_pam[country_pam$cluster == 2, ]$life_expec
c3_life <- country_pam[country_pam$cluster == 3, ]$life_expec
paste("Cluster 1 Median life expectancy: ", median(c1_life), "\\n",
"Cluster 2 Median life expectancy: ", median(c2_life), "\\n",
"Cluster 3 Median life expectancy: ", median(c3_life))
c1_life <- country_pam[country_pam$cluster == 1, ]$life_expec
c2_life <- country_pam[country_pam$cluster == 2, ]$life_expec
c3_life <- country_pam[country_pam$cluster == 3, ]$life_expec
paste("Cluster 1 Median life expectancy: ", median(c1_life))
paste("Cluster 2 Median life expectancy: ", median(c2_life))
paste("Cluster 3 Median life expectancy: ", median(c3_life))
c1_life <- country_pam[country_pam$cluster == 1, ]$life_expec
c2_life <- country_pam[country_pam$cluster == 2, ]$life_expec
c3_life <- country_pam[country_pam$cluster == 3, ]$life_expec
print(quantile(c1_life,0.5))
paste("Cluster 1 Median life expectancy: ", median(c1_life))
paste("Cluster 2 Median life expectancy: ", median(c2_life))
paste("Cluster 3 Median life expectancy: ", median(c3_life))
$quantile
?quantile
library(ape)
country_dend = country_s %>% dist(method="euclidean") %>%
hclust(method="ward.D2")
plot(as.phylo(country_dend), type = "cladogram", cex = 0.5,
label.offset = 0.5)
library(ape)
country_dend = country_s %>% dist(method="euclidean") %>%
hclust(method="ward.D2")
plot(as.phylo(country_dend), type = "cladogram", cex = 0.5,
label.offset = 0.5)
library(ape)
country_dend = country_s %>% dist(method="euclidean") %>%
hclust(method="ward.D2")
plot(as.phylo(country_dend), type = "cladogram", cex = 0.5,
label.offset = 0.5)
View(country_s)
library(ape)
country_dend = country_s %>% dist(method="euclidean") %>%
hclust(method="ward.D2")
plot(as.phylo(country_dend), type = "cladogram", cex = 0.5,
label.offset = 0.5)
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 6, y = pc_var[6]]), color = "orange", cex = 6, alpha = 0.1) +
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 6, y = pc_var[6]), color = "orange", cex = 6, alpha = 0.1) +
scale_x_continuous(breaks = 1:9)
c1_life <- country_pam[country_pam$cluster == 1, ]$life_expec
c2_life <- country_pam[country_pam$cluster == 2, ]$life_expec
c3_life <- country_pam[country_pam$cluster == 3, ]$life_expec
#could also use quantile(cX_life, 0.5)
paste("Cluster 1 Median life expectancy: ", median(c1_life))
paste("Cluster 2 Median life expectancy: ", median(c2_life))
paste("Cluster 3 Median life expectancy: ", median(c3_life))
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
mod_diff
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
knitr::opts_chunk$set(echo = TRUE)
library(factoextra)
library(tidyverse)
library(cluster)
library(ggplot2)
country = read_csv("Country-data.csv", show_col_types = FALSE)
country_pc = country %>%
select(-country) %>%
prcomp(scale=TRUE)
#Variance is SD squared
country_var <- country_pc$sdev^2
pc_var <- country_var / sum(country_var)
pc_var
principal_comp <- 1:9
pc_df <- data.frame(principal_comp, pc_var)
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var)) +
geom_line(color = "black") +
geom_point(color = "blue", cex = 2) +
geom_point(aes(x = 6, y = pc_var[6]), color = "orange", cex = 6, alpha = 0.1) +
scale_x_continuous(breaks = 1:9)
pc_var_Cum <- cumsum(pc_var)
pc_df$cumulative = pc_var_Cum
pc_df %>%
ggplot(aes(x=principal_comp,y=pc_var_Cum)) +
geom_line(color = "black") +
geom_point(color = "red", cex = 2) +
geom_hline(aes(yintercept=0.9), lty=2, color = "purple")+
scale_x_continuous(breaks = 1:9)
country_s = scale(country[,-1])
p4_pc <- country_pc$x[,1:4]
fviz_nbclust(p4_pc, kmeans, "gap_stat")
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
set.seed(42)
#since both algorithms select the centers randomly at first, seed is set to ensure consistency
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
set.seed(42)
#since both algorithms select the centers randomly at first, seed is set to ensure consistency
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
set.seed(42)
#since both algorithms select the centers randomly at first, seed is set to ensure consistency
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
set.seed(42)
#since both algorithms select the centers randomly at first, seed is set to ensure consistency
km_mod = kmeans(country_s, centers=3)
pam_mod = pam(country_s, 3)
mod_diff <- sum(km_mod$cluster != pam_mod$clustering)
paste("Number of different clustered observations between K-means and PAM: ", mod_diff)
